{"ast":null,"code":"var _jsxFileName = \"F:\\\\CS\\\\CODSOFT\\\\list\\\\products-list\\\\src\\\\components\\\\item\\\\items.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Items = props => {\n  const {\n    items,\n    del,\n    incr,\n    decr\n  } = props; // const [quantity, setQuantity] = useState(1);\n  // const handleDecrement = (id) => {\n  //   if (quantity > 1) {\n  //     setQuantity(quantity => quantity.map ( (item)=>\n  //     id === item.id ? {...item, pQuan:item.quantity - 1} : item\n  //     ));\n  //   }\n  // };\n\n  let length = items.length;\n  const ListItem = length ? items.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"delete\",\n        onClick: () => del(item.id),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"count\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dec\",\n          onClick: () => {},\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"inc\",\n          onClick: () => {\n            incr(item.id);\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    children: \"There are no items, Try to add some.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), ListItem]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["F:/CS/CODSOFT/list/products-list/src/components/item/items.js"],"names":["React","useState","Items","props","items","del","incr","decr","length","ListItem","map","item","product","price","id","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA,IAAd;AAAmBC,IAAAA;AAAnB,MAA4BJ,KAAlC,CADuB,CAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIK,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AACA,QAAMC,QAAQ,GAAGD,MAAM,GACrBJ,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AAElB,wBACE;AAAmB,MAAA,SAAS,EAAC,MAA7B;AAAA,8BACE;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMR,GAAG,CAACM,IAAI,CAACG,EAAN,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,OAAO,EAAE,MAAM,CAEd,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,oBAAOH,IAAI,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbT,YAAAA,IAAI,CAACK,IAAI,CAACG,EAAN,CAAJ;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAAUH,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD,GA9BD,CADqB,gBAiCrB;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjCF;AAmCA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGL,QAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzDD;;KAAMP,K;AA2DN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Items = (props) => {\r\n  const { items, del, incr,decr } = props;\r\n  // const [quantity, setQuantity] = useState(1);\r\n  // const handleDecrement = (id) => {\r\n  //   if (quantity > 1) {\r\n  //     setQuantity(quantity => quantity.map ( (item)=>\r\n  //     id === item.id ? {...item, pQuan:item.quantity - 1} : item\r\n  //     ));\r\n  //   }\r\n  // };\r\n  let length = items.length;\r\n  const ListItem = length ? (\r\n    items.map((item) => {\r\n        \r\n      return (\r\n        <div key={item.id} className=\"item\">\r\n          <p>{item.product}</p>\r\n          <p>{item.price}</p>\r\n          <p className=\"delete\" onClick={() => del(item.id)}>\r\n            &times;\r\n          </p>\r\n          <section className=\"count\">\r\n            <button\r\n              className=\"dec\"\r\n              onClick={() => {\r\n                \r\n              }}\r\n            >\r\n              -\r\n            </button>\r\n            <span>{item.quantity}</span>\r\n            <button\r\n              className=\"inc\"\r\n              onClick={() => {\r\n                incr(item.id);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </section>\r\n        </div>\r\n      );\r\n    })\r\n  ) : (\r\n    <div className=\"text\">There are no items, Try to add some.</div>\r\n  );\r\n  return (\r\n    <div>\r\n      <div className=\"header item\">\r\n        <p>Product</p>\r\n        <p>Price</p>\r\n        <p>Edit</p>\r\n        <p>Quantity</p>\r\n      </div>\r\n      {ListItem}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n"]},"metadata":{},"sourceType":"module"}